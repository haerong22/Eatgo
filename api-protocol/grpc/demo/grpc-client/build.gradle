buildscript {
    ext {
        protobufVersion = '3.25.1'
        grpcVersion = '1.60.1'
        protoc_platform = 'osx-x86_64'
    }
}

plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // grpc
    implementation 'net.devh:grpc-client-spring-boot-starter:3.0.0.RELEASE'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'io.grpc:grpc-netty-shaded'
    implementation 'io.grpc:grpc-protobuf'
    implementation 'io.grpc:grpc-stub'

    implementation 'com.google.protobuf:protobuf-java-util:3.21.5'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    useJUnitPlatform()
}

// protobuf 설정
protobuf {
    protobuf {
        protoc {
            if (project.hasProperty('protoc_platform')) {
                artifact = "com.google.protobuf:protoc:${protobufVersion}:${protoc_platform}"
            } else {
                artifact = "com.google.protobuf:protoc:${protobufVersion}"
            }
        }
        plugins {
            grpc {
                if (project.hasProperty('protoc_platform')) {
                    artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}:${protoc_platform}"
                } else {
                    artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
                }
            }
        }
    }
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.60.1"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
